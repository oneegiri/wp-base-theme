@function stripUnit($value) {
  @return $value / ($value * 0 + 1);
}

@function calculate_rem($size, $unit:rem) {
  @return #{stripUnit($size) / stripUnit(16px)}rem;
}

@function decimal-round($number, $digits: 0, $mode: round) {
  $n: 1;

  // $number must be a number
  @if type-of($number) !=number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }

  // $digits must be a unitless number
  @if type-of($digits) !=number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  }

  @else if not unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }

  @if $digits>0 {
    @for $i from 1 through $digits {
      $n: $n * 10;
    }
  }

  @if $mode==round {
    @return round($number * $n) / $n;
  }

  @else if $mode==ceil {
    @return ceil($number * $n) / $n;
  }

  @else if $mode==floor {
    @return floor($number * $n) / $n;
  }

  @else {
    @warn '#{ $mode } is undefined keyword.';
    @return $number;
  }
}

@function get-aspect-ratio($width, $height, $round:round) {
  $aspect: false;

  @if $round==round {
    $ratio: $width / $height;
    $aspect: (1 / $ratio) * 100%;
  }

  @else {
    $ratio: decimal-round($width / $height, 2, $round);
    $aspect: (1 / decimal-round($ratio, 2, $round)) * 100%;
  }

  @return decimal-round($aspect, 2);
}